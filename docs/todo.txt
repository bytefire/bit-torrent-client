(done) 1. test reading a chunk from file
(done) 2. test the creation of meatadata file without extra four fields
(done) 3. add 'pieces' (concatenation of sha1 hashes of all pieces) from torrent file into the metadata file.
(done) 4. verify the piece hashes are correct.
(done) 4. write method to load sha1 of a given piece index from metadata file (where will that code go?)
(done) 5. compare the computed sha1 with the one extracted from metadata file.
(done) 6. remove util_append_to_file method and replace its calls with fwrite.
(done) 6. test the comparison of sha1's.
(done) 7. in util_read_whole_file(), put the single fread inside a loop.
(done) 8. in pwp.h, remove g_savedfp and g_savedfp_mutex. each piece_download() method should create its own savedfp. that wouldn't conflict because each thread would be writing to a different part of the savedfile, i.e. no two threads can be downloading the same piece simultaneously.
9. test download with multiple threads after a separate savedfp for each thread.
10. when validating piece hash, put the check BEFORE updating global variables, so that if the check fails then that piece is marked as not downloaded and available to be downloaded (i.e. some other thread can pick that piece up for download.)
---------------------------------

long-term:
==========

1. connect client to pwp_start
2. ability to resume download
